2025-09-02 06:59:00 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 06:59:00 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 06:59:00 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 06:59:00 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [26]
2025-09-02 06:59:00 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 06:59:00 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 06:59:00 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 06:59:00 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 06:59:00 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 06:59:01 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: PUT http://qdrant:6333/collections/syria_qa_vectors "HTTP/1.1 200 OK"
2025-09-02 06:59:01 - services.ai.qdrant_service - INFO - [qdrant_service.py:64] - _ensure_collection_exists() - Created Qdrant collection: syria_qa_vectors
2025-09-02 06:59:01 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
2025-09-02 06:59:01 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 163, in embed_content
    model = model_types.make_model_name(model)
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/types/model_types.py", line 362, in make_model_name
    raise ValueError(
        f"Invalid model name: '{name}'. Model names should start with 'models/' or 'tunedModels/'."
    )
ValueError: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
2025-09-02 06:59:01 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 06:59:01 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (0/2 core services healthy)
2025-09-02 06:59:01 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (0/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': "Embedding service failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'."}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}
2025-09-02 06:59:01 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (0/2 core services healthy)
2025-09-02 06:59:02 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (0/2 core services healthy)
2025-09-02 06:59:02 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (0/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (0/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': "Embedding service failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'."}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}}
2025-09-02 06:59:02 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:01:06 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:01:06 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:01:06 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:01:06 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [26]
2025-09-02 07:01:10 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:01:10 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:01:10 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:01:10 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [65]
2025-09-02 07:01:10 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:01:10 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:01:10 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:01:10 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:01:10 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:01:10 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:01:10 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
2025-09-02 07:01:10 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 163, in embed_content
    model = model_types.make_model_name(model)
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/types/model_types.py", line 362, in make_model_name
    raise ValueError(
        f"Invalid model name: '{name}'. Model names should start with 'models/' or 'tunedModels/'."
    )
ValueError: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
2025-09-02 07:01:11 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:01:11 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:11 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (0/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': "Embedding service failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'."}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}
2025-09-02 07:01:11 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:11 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:11 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (0/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (0/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': "Embedding service failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'."}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}}
2025-09-02 07:01:11 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:01:14 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:01:14 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:01:14 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:01:14 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [103]
2025-09-02 07:01:14 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:01:14 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:01:14 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:01:14 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:01:14 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:01:14 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:01:14 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
2025-09-02 07:01:14 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 163, in embed_content
    model = model_types.make_model_name(model)
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/types/model_types.py", line 362, in make_model_name
    raise ValueError(
        f"Invalid model name: '{name}'. Model names should start with 'models/' or 'tunedModels/'."
    )
ValueError: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
2025-09-02 07:01:14 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:01:14 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:14 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (0/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': "Embedding service failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'."}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}
2025-09-02 07:01:14 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:14 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:14 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (0/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (0/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': "Embedding service failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'."}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}}
2025-09-02 07:01:14 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:01:34 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:01:34 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:01:34 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:01:34 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [103]
2025-09-02 07:01:44 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:01:44 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:01:45 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:01:45 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [160]
2025-09-02 07:01:45 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:01:45 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:01:45 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:01:45 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:01:45 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:01:45 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:01:45 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
2025-09-02 07:01:45 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 163, in embed_content
    model = model_types.make_model_name(model)
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/types/model_types.py", line 362, in make_model_name
    raise ValueError(
        f"Invalid model name: '{name}'. Model names should start with 'models/' or 'tunedModels/'."
    )
ValueError: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'.
2025-09-02 07:01:45 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:01:45 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:45 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (0/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': "Embedding service failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'."}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}
2025-09-02 07:01:45 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:45 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:45 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (0/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (0/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': "Embedding service failed: Embedding generation failed: Invalid model name: 'embedding-001'. Model names should start with 'models/' or 'tunedModels/'."}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}}
2025-09-02 07:01:45 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:01:53 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:01:53 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:01:53 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:01:53 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [160]
2025-09-02 07:01:55 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:01:55 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:01:56 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:01:56 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [199]
2025-09-02 07:01:56 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:01:56 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:01:56 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:01:56 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:01:56 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:01:56 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:01:56 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: 403 Received http2 header with status: 403
2025-09-02 07:01:56 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: 403 Received http2 header with status: 403
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 213, in embed_content
    embedding_response = client.embed_content(
        embedding_request,
        **request_options,
    )
  File "/usr/local/lib/python3.13/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 1252, in embed_content
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/usr/local/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Received http2 header with status: 403

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: 403 Received http2 header with status: 403
2025-09-02 07:01:56 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:01:56 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:56 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (0/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}
2025-09-02 07:01:56 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:56 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:01:56 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (0/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (0/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}}
2025-09-02 07:01:56 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:02:20 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:02:20 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:02:20 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:02:20 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [199]
2025-09-02 07:02:22 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:02:22 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:02:22 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:02:22 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [239]
2025-09-02 07:02:22 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:02:22 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:02:22 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:02:22 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:02:22 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:02:22 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:02:22 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:02:22 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:02:22 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: 403 Received http2 header with status: 403
2025-09-02 07:02:22 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: 403 Received http2 header with status: 403
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 213, in embed_content
    embedding_response = client.embed_content(
        embedding_request,
        **request_options,
    )
  File "/usr/local/lib/python3.13/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 1252, in embed_content
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/usr/local/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Received http2 header with status: 403

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: 403 Received http2 header with status: 403
2025-09-02 07:02:23 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:02:23 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:02:23 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (1/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}
2025-09-02 07:02:23 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:02:23 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:02:23 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (1/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (1/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'error': "'WebScrapingService' object has no attribute 'get_health'"}}}}
2025-09-02 07:02:23 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:02:46 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:02:46 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:02:46 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:02:46 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [239]
2025-09-02 07:02:48 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:02:48 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:02:48 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:02:48 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [279]
2025-09-02 07:02:48 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:02:48 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:02:48 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:02:48 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:02:48 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:02:48 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:02:48 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:02:48 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:02:48 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: 403 Received http2 header with status: 403
2025-09-02 07:02:48 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: 403 Received http2 header with status: 403
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 213, in embed_content
    embedding_response = client.embed_content(
        embedding_request,
        **request_options,
    )
  File "/usr/local/lib/python3.13/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 1252, in embed_content
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/usr/local/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Received http2 header with status: 403

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: 403 Received http2 header with status: 403
2025-09-02 07:02:49 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:02:49 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:02:49 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (1/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}
2025-09-02 07:02:49 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:02:49 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:02:49 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (1/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (1/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}}
2025-09-02 07:02:49 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:03:17 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:03:17 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:03:17 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:03:17 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [279]
2025-09-02 07:03:19 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:03:19 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:03:19 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:03:19 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [319]
2025-09-02 07:03:19 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:03:19 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:03:19 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:03:19 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:03:19 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:03:19 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:03:19 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: 403 Received http2 header with status: 403
2025-09-02 07:03:19 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: 403 Received http2 header with status: 403
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 213, in embed_content
    embedding_response = client.embed_content(
        embedding_request,
        **request_options,
    )
  File "/usr/local/lib/python3.13/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 1252, in embed_content
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/usr/local/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Received http2 header with status: 403

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: 403 Received http2 header with status: 403
2025-09-02 07:03:20 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:03:20 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:03:20 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (0/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}
2025-09-02 07:03:20 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:03:20 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:03:20 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (0/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (0/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}}
2025-09-02 07:03:20 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:03:30 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:03:30 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:03:30 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:03:30 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [319]
2025-09-02 07:03:32 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:03:32 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:03:32 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:03:32 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [359]
2025-09-02 07:03:32 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:03:32 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:03:32 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:03:32 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:03:32 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:03:32 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:03:32 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:03:32 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:03:32 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: 403 Received http2 header with status: 403
2025-09-02 07:03:33 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: 403 Received http2 header with status: 403
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 213, in embed_content
    embedding_response = client.embed_content(
        embedding_request,
        **request_options,
    )
  File "/usr/local/lib/python3.13/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 1252, in embed_content
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/usr/local/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Received http2 header with status: 403

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: 403 Received http2 header with status: 403
2025-09-02 07:03:33 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:03:33 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:03:33 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (1/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}
2025-09-02 07:03:33 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:03:33 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:03:33 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (1/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (1/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}}
2025-09-02 07:03:33 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:03:42 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:03:42 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:03:42 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:03:42 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [359]
2025-09-02 07:03:44 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:03:44 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:03:44 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:03:44 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [399]
2025-09-02 07:03:44 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:03:44 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:03:44 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:03:44 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:03:44 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:03:44 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:03:45 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: 403 Received http2 header with status: 403
2025-09-02 07:03:45 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: 403 Received http2 header with status: 403
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 213, in embed_content
    embedding_response = client.embed_content(
        embedding_request,
        **request_options,
    )
  File "/usr/local/lib/python3.13/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 1252, in embed_content
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/usr/local/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Received http2 header with status: 403

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: 403 Received http2 header with status: 403
2025-09-02 07:03:45 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:03:45 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:03:45 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (0/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}
2025-09-02 07:03:45 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:03:45 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (0/2 core services healthy)
2025-09-02 07:03:45 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (0/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (0/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'unhealthy', 'error': "'QdrantService' object has no attribute 'get_health'"}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}}
2025-09-02 07:03:45 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:03:56 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:03:56 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:03:56 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:03:56 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [399]
2025-09-02 07:03:58 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:03:58 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:03:58 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:03:58 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [439]
2025-09-02 07:03:58 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:03:58 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:03:58 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:03:58 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:03:58 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:03:58 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:03:58 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:03:58 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:03:59 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: 403 Received http2 header with status: 403
2025-09-02 07:03:59 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: 403 Received http2 header with status: 403
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 213, in embed_content
    embedding_response = client.embed_content(
        embedding_request,
        **request_options,
    )
  File "/usr/local/lib/python3.13/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 1252, in embed_content
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/usr/local/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Received http2 header with status: 403

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: 403 Received http2 header with status: 403
2025-09-02 07:03:59 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:03:59 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:03:59 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (1/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}
2025-09-02 07:03:59 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:03:59 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:03:59 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (1/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (1/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}}
2025-09-02 07:03:59 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
2025-09-02 07:04:15 - uvicorn.error - INFO - [server.py:264] - shutdown() - Shutting down
2025-09-02 07:04:15 - uvicorn.error - INFO - [on.py:67] - shutdown() - Waiting for application shutdown.
2025-09-02 07:04:15 - uvicorn.error - INFO - [on.py:76] - shutdown() - Application shutdown complete.
2025-09-02 07:04:15 - uvicorn.error - INFO - [server.py:94] - _serve() - Finished server process [439]
2025-09-02 07:04:17 - root - INFO - [logging_config.py:157] - setup_logging() - [SETUP] Logging system initialized with level: INFO
2025-09-02 07:04:17 - main - INFO - [main.py:32] - <module>() - [STARTUP] Initializing Syria GPT FastAPI application...
2025-09-02 07:04:17 - main - INFO - [main.py:204] - <module>() - [ROUTER] All API routers included successfully
2025-09-02 07:04:17 - uvicorn.error - INFO - [server.py:84] - _serve() - Started server process [479]
2025-09-02 07:04:17 - uvicorn.error - INFO - [on.py:48] - startup() - Waiting for application startup.
2025-09-02 07:04:17 - main - INFO - [main.py:298] - startup_event() - [STARTUP] Starting Syria GPT application...
2025-09-02 07:04:17 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:205] - log_function_entry() - [ENTER] Entering function: initialize_system with params: {}
2025-09-02 07:04:17 - services.ai.intelligent_qa_service - INFO - [intelligent_qa_service.py:67] - initialize_system() - üöÄ Initializing Enhanced Syria GPT Q&A system...
2025-09-02 07:04:17 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:04:17 - services.ai.qdrant_service - INFO - [qdrant_service.py:66] - _ensure_collection_exists() - Qdrant collection syria_qa_vectors already exists
2025-09-02 07:04:17 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:04:17 - httpx - INFO - [_client.py:1013] - _send_single_request() - HTTP Request: GET http://qdrant:6333/collections "HTTP/1.1 200 OK"
2025-09-02 07:04:17 - services.ai.embedding_service - ERROR - [embedding_service.py:123] - generate_embedding() - Failed to generate embedding for text: 403 Received http2 header with status: 403
2025-09-02 07:04:17 - services.ai.embedding_service - ERROR - [embedding_service.py:129] - generate_embedding() - GenAI API embedding failed: Embedding generation failed: 403 Received http2 header with status: 403
Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 73, in generate_embedding
    result = await asyncio.get_event_loop().run_in_executor(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/concurrent/futures/thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/app/services/ai/embedding_service.py", line 75, in <lambda>
    lambda: self.client.embed_content(
            ~~~~~~~~~~~~~~~~~~~~~~~~~^
        model=self.model_name,
        ^^^^^^^^^^^^^^^^^^^^^^
        content=text_item
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/google/generativeai/embedding.py", line 213, in embed_content
    embedding_response = client.embed_content(
        embedding_request,
        **request_options,
    )
  File "/usr/local/lib/python3.13/site-packages/google/ai/generativelanguage_v1beta/services/generative_service/client.py", line 1252, in embed_content
    response = rpc(
        request,
    ...<2 lines>...
        metadata=metadata,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/gapic_v1/method.py", line 131, in __call__
    return wrapped_func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 294, in retry_wrapped_func
    return retry_target(
        target,
    ...<3 lines>...
        on_error=on_error,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 156, in retry_target
    next_sleep = _retry_error_helper(
        exc,
    ...<6 lines>...
        timeout,
    )
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_base.py", line 214, in _retry_error_helper
    raise final_exc from source_exc
  File "/usr/local/lib/python3.13/site-packages/google/api_core/retry/retry_unary.py", line 147, in retry_target
    result = target()
  File "/usr/local/lib/python3.13/site-packages/google/api_core/timeout.py", line 130, in func_with_timeout
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.13/site-packages/google/api_core/grpc_helpers.py", line 78, in error_remapped_callable
    raise exceptions.from_grpc_error(exc) from exc
google.api_core.exceptions.PermissionDenied: 403 Received http2 header with status: 403

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/ai/embedding_service.py", line 124, in generate_embedding
    raise RuntimeError(f"Embedding generation failed: {e}")
RuntimeError: Embedding generation failed: 403 Received http2 header with status: 403
2025-09-02 07:04:18 - services.ai.gemini_service - ERROR - [gemini_service.py:147] - answer_question() - Failed to answer question with Gemini: 403 Received http2 header with status: 403
2025-09-02 07:04:18 - services.ai.intelligent_qa_service - ERROR - [intelligent_qa_service.py:93] - initialize_system() - ‚ùå Failed to initialize system: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:04:18 - services.ai.intelligent_qa_service - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in initialize_system: Core services are unhealthy (1/2 core services healthy) - Context: {'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}
2025-09-02 07:04:18 - services.ai.intelligent_qa_service - DEBUG - [logging_config.py:232] - log_error_with_context() - [ERROR] Error details: Exception: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:04:18 - main - ERROR - [main.py:315] - startup_event() - [STARTUP] System initialization failed: Core services are unhealthy (1/2 core services healthy)
2025-09-02 07:04:18 - main - ERROR - [logging_config.py:231] - log_error_with_context() - [ERROR] Error in startup_event: Core services are unhealthy (1/2 core services healthy) - Context: {'init_result': {'status': 'error', 'error': 'Core services are unhealthy (1/2 core services healthy)', 'health_checks': {'qdrant': {'status': 'healthy', 'details': {'available': True, 'host': 'qdrant', 'port': 6333, 'collection_name': 'syria_qa_vectors', 'collections_count': 1, 'connection_status': 'healthy'}}, 'embedding': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Embedding service failed: Embedding generation failed: 403 Received http2 header with status: 403'}}, 'gemini': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Test question failed', 'details': 'Service connected but not responding properly'}}, 'web_scraping': {'status': 'unhealthy', 'details': {'available': False, 'error': 'Session not initialized', 'details': 'Web scraping service not ready'}}}}}
2025-09-02 07:04:18 - uvicorn.error - INFO - [on.py:62] - startup() - Application startup complete.
